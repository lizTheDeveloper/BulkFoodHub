"""Initial migration - create all tables

Revision ID: 261d7611c322
Revises: 
Create Date: 2025-10-28 06:59:49.295336

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '261d7611c322'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('pricing_tiers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('min_order_value', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('max_order_value', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('discount_percentage', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('discount_percentage >= 0 AND discount_percentage <= 100', name='check_valid_discount'),
    sa.CheckConstraint('min_order_value >= 0', name='check_non_negative_min_order'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_pricing_tier_active', 'pricing_tiers', ['is_active'], unique=False)
    op.create_index('idx_pricing_tier_range', 'pricing_tiers', ['min_order_value', 'max_order_value'], unique=False)
    op.create_index(op.f('ix_pricing_tiers_id'), 'pricing_tiers', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('role', sa.Enum('CUSTOMER', 'WHOLESALE_BUYER', 'SUPPLIER', 'ADMIN', name='userrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_user_active', 'users', ['is_active'], unique=False)
    op.create_index('idx_user_email', 'users', ['email'], unique=False)
    op.create_index('idx_user_role', 'users', ['role'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('addresses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('label', sa.String(length=50), nullable=False),
    sa.Column('street_address', sa.String(length=255), nullable=False),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('state', sa.String(length=50), nullable=False),
    sa.Column('postal_code', sa.String(length=20), nullable=False),
    sa.Column('country', sa.String(length=50), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_address_default', 'addresses', ['user_id', 'is_default'], unique=False)
    op.create_index('idx_address_user', 'addresses', ['user_id'], unique=False)
    op.create_index(op.f('ix_addresses_id'), 'addresses', ['id'], unique=False)
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('table_name', sa.String(length=100), nullable=False),
    sa.Column('record_id', sa.Integer(), nullable=True),
    sa.Column('old_values', sa.Text(), nullable=True),
    sa.Column('new_values', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_audit_action', 'audit_logs', ['action'], unique=False)
    op.create_index('idx_audit_created', 'audit_logs', ['created_at'], unique=False)
    op.create_index('idx_audit_table', 'audit_logs', ['table_name'], unique=False)
    op.create_index('idx_audit_user', 'audit_logs', ['user_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_id'), 'audit_logs', ['id'], unique=False)
    op.create_table('suppliers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('business_name', sa.String(length=255), nullable=False),
    sa.Column('business_license', sa.String(length=100), nullable=True),
    sa.Column('tax_id', sa.String(length=50), nullable=True),
    sa.Column('food_safety_certification', sa.String(length=100), nullable=True),
    sa.Column('insurance_documentation', sa.String(length=100), nullable=True),
    sa.Column('bank_account_info', sa.Text(), nullable=True),
    sa.Column('business_references', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'SUSPENDED', 'REJECTED', name='supplierstatus'), nullable=False),
    sa.Column('verification_notes', sa.Text(), nullable=True),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('approved_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['approved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index('idx_supplier_business_name', 'suppliers', ['business_name'], unique=False)
    op.create_index('idx_supplier_status', 'suppliers', ['status'], unique=False)
    op.create_index('idx_supplier_user', 'suppliers', ['user_id'], unique=False)
    op.create_index(op.f('ix_suppliers_id'), 'suppliers', ['id'], unique=False)
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('shipping_address_id', sa.Integer(), nullable=False),
    sa.Column('order_number', sa.String(length=50), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'CONFIRMED', 'SHIPPED', 'DELIVERED', 'CANCELLED', name='orderstatus'), nullable=False),
    sa.Column('subtotal', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('tax_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('shipping_cost', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('payment_status', sa.Enum('PENDING', 'COMPLETED', 'FAILED', 'REFUNDED', name='paymentstatus'), nullable=False),
    sa.Column('payment_intent_id', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('shipping_cost >= 0', name='check_non_negative_shipping'),
    sa.CheckConstraint('subtotal >= 0', name='check_non_negative_subtotal'),
    sa.CheckConstraint('tax_amount >= 0', name='check_non_negative_tax'),
    sa.CheckConstraint('total_amount >= 0', name='check_non_negative_total'),
    sa.ForeignKeyConstraint(['shipping_address_id'], ['addresses.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_order_created', 'orders', ['created_at'], unique=False)
    op.create_index('idx_order_payment_status', 'orders', ['payment_status'], unique=False)
    op.create_index('idx_order_status', 'orders', ['status'], unique=False)
    op.create_index('idx_order_user', 'orders', ['user_id'], unique=False)
    op.create_index(op.f('ix_orders_id'), 'orders', ['id'], unique=False)
    op.create_index(op.f('ix_orders_order_number'), 'orders', ['order_number'], unique=True)
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('supplier_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.Enum('NUTS', 'GRAINS', 'LEGUMES', 'DRIED_FRUITS', 'CEREALS', name='productcategory'), nullable=False),
    sa.Column('sku', sa.String(length=100), nullable=True),
    sa.Column('price_per_unit', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('unit_type', sa.String(length=20), nullable=False),
    sa.Column('available_quantity', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('minimum_order_quantity', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('nutritional_info', sa.Text(), nullable=True),
    sa.Column('ingredients', sa.Text(), nullable=True),
    sa.Column('allergens', sa.Text(), nullable=True),
    sa.Column('expiration_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_approved', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.CheckConstraint('available_quantity >= 0', name='check_non_negative_quantity'),
    sa.CheckConstraint('minimum_order_quantity > 0', name='check_positive_min_order'),
    sa.CheckConstraint('price_per_unit > 0', name='check_positive_price'),
    sa.ForeignKeyConstraint(['supplier_id'], ['suppliers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_product_active', 'products', ['is_active'], unique=False)
    op.create_index('idx_product_approved', 'products', ['is_approved'], unique=False)
    op.create_index('idx_product_category', 'products', ['category'], unique=False)
    op.create_index('idx_product_name', 'products', ['name'], unique=False)
    op.create_index('idx_product_supplier', 'products', ['supplier_id'], unique=False)
    op.create_index(op.f('ix_products_id'), 'products', ['id'], unique=False)
    op.create_table('order_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('unit_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('total_price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.CheckConstraint('quantity > 0', name='check_positive_quantity'),
    sa.CheckConstraint('total_price >= 0', name='check_non_negative_total_price'),
    sa.CheckConstraint('unit_price >= 0', name='check_non_negative_unit_price'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_order_item_order', 'order_items', ['order_id'], unique=False)
    op.create_index('idx_order_item_product', 'order_items', ['product_id'], unique=False)
    op.create_index(op.f('ix_order_items_id'), 'order_items', ['id'], unique=False)
    op.create_table('product_images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('image_url', sa.String(length=500), nullable=False),
    sa.Column('alt_text', sa.String(length=255), nullable=True),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_image_primary', 'product_images', ['product_id', 'is_primary'], unique=False)
    op.create_index('idx_image_product', 'product_images', ['product_id'], unique=False)
    op.create_index(op.f('ix_product_images_id'), 'product_images', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_product_images_id'), table_name='product_images')
    op.drop_index('idx_image_product', table_name='product_images')
    op.drop_index('idx_image_primary', table_name='product_images')
    op.drop_table('product_images')
    op.drop_index(op.f('ix_order_items_id'), table_name='order_items')
    op.drop_index('idx_order_item_product', table_name='order_items')
    op.drop_index('idx_order_item_order', table_name='order_items')
    op.drop_table('order_items')
    op.drop_index(op.f('ix_products_id'), table_name='products')
    op.drop_index('idx_product_supplier', table_name='products')
    op.drop_index('idx_product_name', table_name='products')
    op.drop_index('idx_product_category', table_name='products')
    op.drop_index('idx_product_approved', table_name='products')
    op.drop_index('idx_product_active', table_name='products')
    op.drop_table('products')
    op.drop_index(op.f('ix_orders_order_number'), table_name='orders')
    op.drop_index(op.f('ix_orders_id'), table_name='orders')
    op.drop_index('idx_order_user', table_name='orders')
    op.drop_index('idx_order_status', table_name='orders')
    op.drop_index('idx_order_payment_status', table_name='orders')
    op.drop_index('idx_order_created', table_name='orders')
    op.drop_table('orders')
    op.drop_index(op.f('ix_suppliers_id'), table_name='suppliers')
    op.drop_index('idx_supplier_user', table_name='suppliers')
    op.drop_index('idx_supplier_status', table_name='suppliers')
    op.drop_index('idx_supplier_business_name', table_name='suppliers')
    op.drop_table('suppliers')
    op.drop_index(op.f('ix_audit_logs_id'), table_name='audit_logs')
    op.drop_index('idx_audit_user', table_name='audit_logs')
    op.drop_index('idx_audit_table', table_name='audit_logs')
    op.drop_index('idx_audit_created', table_name='audit_logs')
    op.drop_index('idx_audit_action', table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index(op.f('ix_addresses_id'), table_name='addresses')
    op.drop_index('idx_address_user', table_name='addresses')
    op.drop_index('idx_address_default', table_name='addresses')
    op.drop_table('addresses')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index('idx_user_role', table_name='users')
    op.drop_index('idx_user_email', table_name='users')
    op.drop_index('idx_user_active', table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_pricing_tiers_id'), table_name='pricing_tiers')
    op.drop_index('idx_pricing_tier_range', table_name='pricing_tiers')
    op.drop_index('idx_pricing_tier_active', table_name='pricing_tiers')
    op.drop_table('pricing_tiers')
    # ### end Alembic commands ###
